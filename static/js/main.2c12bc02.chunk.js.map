{"version":3,"sources":["assets/UTA_Initials_white-orange-star-rgb.png","Calendar/Calendar.jsx","Contact/Contact.jsx","Search/SemesterDropDown.jsx","Search/CourseDropDown.jsx","Search/SearchResults.jsx","Search/Search.jsx","Welcome/Welcome.jsx","Navbar/Navbar.jsx","App.js","index.js"],"names":["module","exports","Calendar","storedExams","setStoredExams","useState","useEffect","loadStoredExams","storedAddedExams","JSON","parse","sessionStorage","getItem","Object","values","handleStorageChange","e","key","window","addEventListener","removeEventListener","formatDateTime","date","time","year","month","day","split","hours","minutes","concat","formatTime","hour","parseInt","ampm","React","createElement","className","length","Fragment","map","exam","index","course_subject","course_number","section","days_met","start_time","end_time","building_name","room_no","instructor_name","onClick","calendarContent","join","calendarDataURI","encodeURIComponent","link","document","href","download","body","appendChild","click","removeChild","error","console","handleExportCalendar","FontAwesomeIcon","icon","faCalendar","googleCalendarURL","startTime","endTime","fullURL","open","handleExportGoogleCalendar","faGoogle","setItem","stringify","dispatchEvent","Event","removeExam","faTrash","handleExportAllCalendar","flatMap","Contact","class","target","rel","faGithub","color","size","faLinkedin","SemesterDropDown","_ref","semesters","selectedSemester","onSemesterChange","sortedSemesters","sort","a","b","semester_year","semester_name","value","onChange","semester","id","CourseDropDown","courses","selectedCourse","onCourseChange","uniqueCourses","Set","filteredCourses","filter","course","courseIdentifier","has","add","localeCompare","undefined","numeric","SearchResults","API_url","searchResults","setSearchResults","loading","setLoading","setError","addedExams","setAddedExams","api_url","async","endpoint","storageKey","storedResults","response","fetch","ok","Error","data","json","message","fetchSearchResults","loadAddedExams","getCourseInfo","courseId","find","result","courseInfo","course_id","examKey","isAdded","updatedAddedExams","toggleExamInCalendar","Search","setSemesters","setSelectedSemester","setCourses","setSelectedCourse","showSearchResults","setShowSearchResults","storedSemesters","log","statusText","fetchSemesters","storedCourses","fetchCourses","SemesterDropdown","semesterId","CourseDropdown","handleSearchResultVisibility","Link","to","Welcome","NavBar","src","UTAImage","alt","faHome","faSearch","faEnvelope","App","Routes","Route","path","element","ReactDOM","createRoot","getElementById","render","StrictMode","HashRouter"],"mappings":"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","file":"static/js/main.2c12bc02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/UTA_Initials_white-orange-star-rgb.b7a18770.png\";","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendar, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport './Calendar.css';\n\nexport default function Calendar() {\n    const [storedExams, setStoredExams] = useState([]);\n\n    useEffect(() => {\n        const loadStoredExams = () => {\n            const storedAddedExams = JSON.parse(sessionStorage.getItem('MES_added_to_calendar') || '{}');\n            setStoredExams(Object.values(storedAddedExams));\n        };\n\n        loadStoredExams();\n\n        const handleStorageChange = (e) => {\n            if (e.key === 'MES_added_to_calendar') {\n                loadStoredExams();\n            }\n        };\n\n        window.addEventListener('storage', handleStorageChange);\n\n        return () => {\n            window.removeEventListener('storage', handleStorageChange);\n        };\n    }, []);\n\n    const removeExam = (exam) => {\n        const storedAddedExams = JSON.parse(sessionStorage.getItem('MES_added_to_calendar') || '{}');\n        const examKey = `${exam.date}_${exam.start_time}_${exam.course_subject}_${exam.course_number}_${exam.section}`;\n\n        delete storedAddedExams[examKey];\n        sessionStorage.setItem('MES_added_to_calendar', JSON.stringify(storedAddedExams));\n\n        setStoredExams(Object.values(storedAddedExams));\n\n        // Trigger storage event for other components\n        window.dispatchEvent(new Event('storage'));\n    };\n\n    const formatDateTime = (date, time) => {\n        const [year, month, day] = date.split('-');\n        const [hours, minutes] = time.split(':');\n        return `${year}${month}${day}T${hours}${minutes}00`;\n    };\n\n    const handleExportGoogleCalendar = (exam) => {\n        try {\n            const googleCalendarURL = 'https://www.google.com/calendar/render?action=TEMPLATE';\n\n            const startTime = formatDateTime(exam.date, exam.start_time);\n            const endTime = formatDateTime(exam.date, exam.end_time);\n\n            const calendarContent = [\n                `text=${encodeURIComponent(`${exam.course_subject} ${exam.course_number} - Exam`)}`,\n                `dates=${startTime}/${endTime}`,\n                `details=${encodeURIComponent(`Section: ${exam.section}, Building: ${exam.building_name}, Room: ${exam.room_no}, Instructor: ${exam.instructor_name}`)}`,\n                `location=${encodeURIComponent(`${exam.building_name} ${exam.room_no}`)}`,\n            ].join('&');\n\n            const fullURL = `${googleCalendarURL}&${calendarContent}`;\n\n            window.open(fullURL, '_blank');\n        } catch (error) {\n            console.error('Error exporting Google Calendar:', error);\n        }\n    };\n\n    const handleExportCalendar = (exam) => {\n        try {\n            const calendarContent = [\n                'BEGIN:VCALENDAR',\n                'VERSION:2.0',\n                'CALSCALE:GREGORIAN',\n                'BEGIN:VEVENT',\n                `SUMMARY:${exam.course_subject} ${exam.course_number} - Exam`,\n                `DESCRIPTION:Section: ${exam.section}\\\\nBuilding: ${exam.building_name}\\\\nRoom: ${exam.room_no}\\\\nInstructor: ${exam.instructor_name}`,\n                `DTSTART:${formatDateTime(exam.date, exam.start_time)}`,\n                `DTEND:${formatDateTime(exam.date, exam.end_time)}`,\n                `LOCATION:${exam.building_name} ${exam.room_no}`,\n                'STATUS:CONFIRMED',\n                'SEQUENCE:0',\n                'BEGIN:VALARM',\n                'TRIGGER:-PT15M',\n                'DESCRIPTION:Reminder',\n                'ACTION:DISPLAY',\n                'END:VALARM',\n                'END:VEVENT',\n                'END:VCALENDAR',\n            ].join('\\n');\n\n            const calendarDataURI = `data:text/calendar;charset=utf-8,${encodeURIComponent(calendarContent)}`;\n            const link = document.createElement('a');\n            link.href = calendarDataURI;\n            link.download = `exam_${exam.course_subject}_${exam.course_number}.ics`;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        } catch (error) {\n            console.error('Error exporting calendar:', error);\n        }\n    };\n\n    const handleExportAllCalendar = () => {\n        try {\n            const calendarContent = [\n                'BEGIN:VCALENDAR',\n                'VERSION:2.0',\n                'CALSCALE:GREGORIAN',\n                ...storedExams.flatMap(exam => [\n                    'BEGIN:VEVENT',\n                    `SUMMARY:${exam.course_subject} ${exam.course_number} - Exam`,\n                    `DESCRIPTION:Section: ${exam.section}\\\\nBuilding: ${exam.building_name}\\\\nRoom: ${exam.room_no}\\\\nInstructor: ${exam.instructor_name}`,\n                    `DTSTART:${formatDateTime(exam.date, exam.start_time)}`,\n                    `DTEND:${formatDateTime(exam.date, exam.end_time)}`,\n                    `LOCATION:${exam.building_name} ${exam.room_no}`,\n                    'STATUS:CONFIRMED',\n                    'SEQUENCE:0',\n                    'BEGIN:VALARM',\n                    'TRIGGER:-PT15M',\n                    'DESCRIPTION:Reminder',\n                    'ACTION:DISPLAY',\n                    'END:VALARM',\n                    'END:VEVENT'\n                ]),\n                'END:VCALENDAR'\n            ].join('\\n');\n\n            const calendarDataURI = `data:text/calendar;charset=utf-8,${encodeURIComponent(calendarContent)}`;\n            const link = document.createElement('a');\n            link.href = calendarDataURI;\n            link.download = `all_exams.ics`;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        } catch (error) {\n            console.error('Error exporting all exams to calendar:', error);\n        }\n    };\n\n    const handleExportAllGoogleCalendar = () => {\n        try {\n            const googleCalendarURL = 'https://www.google.com/calendar/render?action=TEMPLATE';\n            const events = storedExams.map(exam => {\n                const startTime = formatDateTime(exam.date, exam.start_time);\n                const endTime = formatDateTime(exam.date, exam.end_time);\n                return [\n                    `text=${encodeURIComponent(`${exam.course_subject} ${exam.course_number} - Exam`)}`,\n                    `dates=${startTime}/${endTime}`,\n                    `details=${encodeURIComponent(`Section: ${exam.section}, Building: ${exam.building_name}, Room: ${exam.room_no}, Instructor: ${exam.instructor_name}`)}`,\n                    `location=${encodeURIComponent(`${exam.building_name} ${exam.room_no}`)}`,\n                ].join('&');\n            });\n\n            const fullURL = `${googleCalendarURL}&${events.join('&')}`;\n            window.open(fullURL, '_blank');\n        } catch (error) {\n            console.error('Error exporting all exams to Google Calendar:', error);\n        }\n    };\n\n    const formatTime = (time) => {\n        if (!time) return '';\n        const [hours, minutes] = time.split(':');\n        const hour = parseInt(hours, 10);\n        const ampm = hour >= 12 ? 'P.M.' : 'A.M.';\n        const formattedHour = hour % 12 || 12;\n        return `${formattedHour}:${minutes} ${ampm}`;\n    };\n\n    return (\n        <div className=\"calendar-container\">\n            <h2>Added Exams</h2>\n            {storedExams.length > 0 ? (\n                <>\n                    <table className=\"calendar-table\">\n                        <thead>\n                            <tr>\n                                <th>Course Subject</th>\n                                <th>Course Number</th>\n                                <th>Section</th>\n                                <th>Days Met</th>\n                                <th>Date (YYYY-MM-DD)</th>\n                                <th>Start Time</th>\n                                <th>End Time</th>\n                                <th>Building Name</th>\n                                <th>Room No</th>\n                                <th>Instructor Name</th>\n                                <th>Export</th>\n                                <th>Remove</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {storedExams.map((exam, index) => (\n                                <tr key={index}>\n                                    <td>{exam.course_subject}</td>\n                                    <td>{exam.course_number}</td>\n                                    <td>{exam.section}</td>\n                                    <td>{exam.days_met}</td>\n                                    <td>{exam.date}</td>\n                                    <td>{formatTime(exam.start_time)}</td>\n                                    <td>{formatTime(exam.end_time)}</td>\n                                    <td>{exam.building_name}</td>\n                                    <td>{exam.room_no}</td>\n                                    <td>{exam.instructor_name}</td>\n                                    <td>\n                                        <button onClick={() => handleExportCalendar(exam)} className=\"export-button\">\n                                            <FontAwesomeIcon icon={faCalendar} />\n                                        </button>\n                                        <button onClick={() => handleExportGoogleCalendar(exam)} className=\"export-button\">\n                                            <FontAwesomeIcon icon={faGoogle} />\n                                        </button>\n                                    </td>\n                                    <td>\n                                        <button onClick={() => removeExam(exam)} className=\"remove-button\">\n                                            <FontAwesomeIcon icon={faTrash} />\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                    <div className=\"export-all-buttons\">\n                        <button onClick={handleExportAllCalendar} className=\"export-all-button\">\n                            <FontAwesomeIcon icon={faCalendar} /> Export All to ICS\n                        </button>\n                    </div>\n                </>\n            ) : (\n                <p>No exams added to the calendar yet.</p>\n            )}\n        </div>\n    );\n}","import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\"\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\"\nimport './Contact.css'\n\nexport default function Contact() {\n    return (\n        <>\n            <div class=\"fadeInUp-animation fadeInTitle\">Contact Me!</div>\n            <div className=\"info-container\">\n                <div className=\"info-box fadeInUp-animation\">\n                    <p>Thank you for showing interest in getting in touch with me. I am open to opinions, ideas and collaboration. If you find any inaccuracies or have any suggestions, please reach out to me!</p>\n\n                    <div className=\"contact-links\">\n                        <a href=\"https://github.com/rm206\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <FontAwesomeIcon icon={faGithub} className=\"icon\" color=\"#4d4d4e\" size=\"3x\" />\n                        </a>\n                        <a href=\"https://www.linkedin.com/in/rishabh-mediratta/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <FontAwesomeIcon icon={faLinkedin} size=\"3x\" />\n                        </a>\n                        <span className=\"email\"><code>panicpark60 [at] gmail [dot] com</code></span>\n                    </div>\n\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport './Search.css';\n\nconst SemesterDropDown = ({ semesters, selectedSemester, onSemesterChange }) => {\n    // Sort semesters from most recent to oldest\n    const sortedSemesters = [...semesters].sort((a, b) => {\n        if (a.semester_year !== b.semester_year) {\n            return b.semester_year - a.semester_year;\n        }\n        return a.semester_name === 'Fall' ? -1 : 1;\n    });\n\n    return (\n        <select\n            className=\"dropdown\"\n            value={selectedSemester}\n            onChange={(e) => onSemesterChange(e.target.value)}\n        >\n            <option value=\"\">Select a semester</option>\n            {sortedSemesters.map((semester) => (\n                <option key={semester.id} value={semester.id}>\n                    {`${semester.semester_name} ${semester.semester_year}`}\n                </option>\n            ))}\n            <option value=\"all\">All semesters</option>\n        </select>\n    );\n};\n\nexport default SemesterDropDown;","import React from 'react'\nimport './Search.css'\n\nexport default function CourseDropDown({ courses, selectedCourse, onCourseChange, selectedSemester }) {\n    // Create a Set to store unique course identifiers\n    const uniqueCourses = new Set();\n\n    // Filter out duplicate courses\n    const filteredCourses = courses.filter(course => {\n        const courseIdentifier = `${course.course_subject} ${course.course_number}`;\n        if (!uniqueCourses.has(courseIdentifier)) {\n            uniqueCourses.add(courseIdentifier);\n            return true;\n        }\n        return false;\n    });\n\n    // Sort the courses if the selected semester is 'all'\n    if (selectedSemester === \"all\") {\n        filteredCourses.sort((a, b) => {\n            // First, compare by subject\n            if (a.course_subject < b.course_subject) return -1;\n            if (a.course_subject > b.course_subject) return 1;\n\n            // If subjects are the same, compare by number\n            return a.course_number.localeCompare(b.course_number, undefined, { numeric: true });\n        });\n    }\n\n    return (\n        <select\n            className=\"dropdown\"\n            value={selectedCourse}\n            onChange={(e) => onCourseChange(e.target.value)}\n        >\n            <option value=\"\">Select a course</option>\n            {filteredCourses.map((course) => (\n                <option key={course.id} value={course.id}>\n                    {`${course.course_subject} ${course.course_number}`}\n                </option>\n            ))}\n        </select>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport './Search.css';\n\nexport default function SearchResults({ selectedSemester, selectedCourse, API_url }) {\n    const [searchResults, setSearchResults] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [addedExams, setAddedExams] = useState({});\n    const api_url = API_url\n\n    useEffect(() => {\n        const fetchSearchResults = async () => {\n            setLoading(true);\n            setError(null);\n\n            if (selectedSemester === 'all' && !selectedCourse) {\n                setError(\"There are too many courses to display. Please choose a particular course to see results.\");\n                setLoading(false);\n                return;\n            }\n\n            let endpoint;\n            if (selectedSemester === 'all' && selectedCourse) {\n                endpoint = `exams/course/${selectedCourse}`;\n            } else if (selectedSemester !== 'all' && !selectedCourse) {\n                endpoint = `exams/semester/${selectedSemester}`;\n            } else if (selectedSemester !== 'all' && selectedCourse) {\n                const storageKey = `MES_exams_${selectedSemester}_${selectedCourse}`;\n                const storedResults = sessionStorage.getItem(storageKey);\n\n                if (storedResults) {\n                    setSearchResults(JSON.parse(storedResults));\n                    setLoading(false);\n                    return;\n                }\n\n                endpoint = `exams/semesterAndCourse/${selectedSemester}/${selectedCourse}`;\n            }\n\n            try {\n                const response = await fetch(`${api_url}${endpoint}`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch search results');\n                }\n                const data = await response.json();\n                setSearchResults(data);\n\n                if (selectedSemester !== 'all' && selectedCourse) {\n                    sessionStorage.setItem(`MES_exams_${selectedSemester}_${selectedCourse}`, JSON.stringify(data));\n                }\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n\n            // Load added exams from session storage\n            // const storedAddedExams = JSON.parse(sessionStorage.getItem('MES_added_to_calendar') || '{}');\n            // setAddedExams(storedAddedExams);\n        };\n\n        fetchSearchResults();\n    }, [selectedSemester, selectedCourse]);\n\n    useEffect(() => {\n        const loadAddedExams = () => {\n            const storedAddedExams = JSON.parse(sessionStorage.getItem('MES_added_to_calendar') || '{}');\n            setAddedExams(storedAddedExams);\n        };\n\n        loadAddedExams();\n\n        const handleStorageChange = (e) => {\n            if (e.key === 'MES_added_to_calendar') {\n                loadAddedExams();\n            }\n        };\n\n        window.addEventListener('storage', handleStorageChange);\n        return () => window.removeEventListener('storage', handleStorageChange);\n    }, []);\n\n    const getCourseInfo = (courseId) => {\n        const storageKey = selectedSemester === 'all' ? 'MES_courses_all' : `MES_courses_${selectedSemester}`;\n        const storedCourses = JSON.parse(sessionStorage.getItem(storageKey) || '[]');\n        return storedCourses.find(course => course.id === courseId) || { course_subject: '', course_number: '' };\n    };\n\n    const toggleExamInCalendar = (exam) => {\n        const examKey = `${exam.date}_${exam.start_time}_${exam.course_subject}_${exam.course_number}_${exam.section}`;\n        const updatedAddedExams = { ...addedExams };\n\n        if (updatedAddedExams[examKey]) {\n            delete updatedAddedExams[examKey];\n        } else {\n            updatedAddedExams[examKey] = exam;\n        }\n\n        setAddedExams(updatedAddedExams);\n        sessionStorage.setItem('MES_added_to_calendar', JSON.stringify(updatedAddedExams));\n    };\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div className=\"error\">{error}</div>;\n\n    const formatTime = (time) => {\n        if (!time) return '';\n        const [hours, minutes] = time.split(':');\n        const hour = parseInt(hours, 10);\n        const ampm = hour >= 12 ? 'P.M.' : 'A.M.';\n        const formattedHour = hour % 12 || 12;\n        return `${formattedHour}:${minutes} ${ampm}`;\n    };\n\n    return (\n        <div className=\"search-results-container\">\n            <table className=\"search-results-table\">\n                <thead>\n                    <tr>\n                        <th>Course Subject</th>\n                        <th>Course Number</th>\n                        <th>Section</th>\n                        <th>Days Met</th>\n                        <th>Date (YYYY-MM-DD)</th>\n                        <th>Start Time</th>\n                        <th>End Time</th>\n                        <th>Building Name</th>\n                        <th>Room No</th>\n                        <th>Instructor Name</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {searchResults.map((result, index) => {\n                        const courseInfo = selectedCourse ? getCourseInfo(selectedCourse) : getCourseInfo(result.course_id);\n                        const examKey = `${result.date}_${result.start_time}_${courseInfo.course_subject}_${courseInfo.course_number}_${result.section}`;\n                        const isAdded = !!addedExams[examKey];\n                        return (\n                            <tr key={index}>\n                                <td>{courseInfo.course_subject}</td>\n                                <td>{courseInfo.course_number}</td>\n                                <td>{result.section}</td>\n                                <td>{result.days_met}</td>\n                                <td>{result.date}</td>\n                                <td>{formatTime(result.start_time)}</td>\n                                <td>{formatTime(result.end_time)}</td>\n                                <td>{result.building_name}</td>\n                                <td>{result.room_no}</td>\n                                <td>{result.instructor_name}</td>\n                                <td>\n                                    <button\n                                        onClick={() => toggleExamInCalendar({ ...result, ...courseInfo })}\n                                        className={isAdded ? 'added-button' : 'add-button'}\n                                    >\n                                        {isAdded ? 'Added' : 'Add'}\n                                    </button>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}","import React from 'react'\nimport { useState, useEffect } from 'react';\nimport SemesterDropdown from './SemesterDropDown';\nimport CourseDropdown from './CourseDropDown';\nimport SearchResults from './SearchResults';\nimport './Search.css'\nimport { Link } from 'react-router-dom';\n\nexport default function Search() {\n\n    const api_url = \"https://mav-exam-scheduler-1eb78284eaa3.herokuapp.com/\"\n    const [semesters, setSemesters] = useState([]);\n    const [selectedSemester, setSelectedSemester] = useState('');\n    const [courses, setCourses] = useState([]);\n    const [selectedCourse, setSelectedCourse] = useState('');\n    const [showSearchResults, setShowSearchResults] = useState(false);\n\n\n    useEffect(() => {\n        const fetchSemesters = async () => {\n            // Check session storage for semesters\n            const storedSemesters = sessionStorage.getItem(\"MES_all_semesters\");\n\n            if (storedSemesters) {\n                setSemesters(JSON.parse(storedSemesters));\n                console.log(\"Semesters fetched from session storage\")\n            }\n            else {\n                try {\n                    const response = await fetch(api_url + \"semesters\");\n                    if (response.ok) {\n                        const data = await response.json();\n                        setSemesters(data);\n                        sessionStorage.setItem(\"MES_all_semesters\", JSON.stringify(data));\n                    }\n                    else {\n                        console.error(\"Failed to fetch semesters:\", response.statusText);\n                    }\n                }\n                catch (error) {\n                    console.error(\"Error fetching semesters:\", error);\n                }\n            }\n        };\n\n        fetchSemesters();\n    }, []);\n\n    useEffect(() => {\n        const fetchCourses = async () => {\n            if (selectedSemester) {\n                const storageKey = selectedSemester === 'all' ? 'MES_courses_all' : `MES_courses_${selectedSemester}`;\n                const storedCourses = sessionStorage.getItem(storageKey);\n                if (storedCourses) {\n                    setCourses(JSON.parse(storedCourses));\n                    console.log(\"Courses fetched from session storage\");\n                }\n                else {\n                    try {\n                        const endpoint = selectedSemester === 'all' ? 'courses/all' : `courses/${selectedSemester}`;\n                        const response = await fetch(`${api_url}${endpoint}`);\n                        if (response.ok) {\n                            const data = await response.json();\n                            setCourses(data);\n                            sessionStorage.setItem(storageKey, JSON.stringify(data));\n                        }\n                        else {\n                            console.error(\"Failed to fetch courses:\", response.statusText);\n                        }\n                    }\n                    catch (error) {\n                        console.error(\"Error fetching courses:\", error);\n                    }\n                }\n            }\n            else {\n                setCourses([]);\n            }\n        };\n\n        fetchCourses();\n    }, [selectedSemester]);\n\n    const handleSemesterChange = (semesterId) => {\n        setSelectedSemester(semesterId);\n    };\n\n    const handleCourseChange = (courseId) => {\n        setSelectedCourse(courseId);\n    };\n\n    const handleSearchResultVisibility = () => {\n        setShowSearchResults(true);\n    };\n\n\n    return (\n        <>\n            <div className=\"semester-selection\">\n                <h2>Select a Semester</h2>\n                <SemesterDropdown\n                    semesters={semesters}\n                    selectedSemester={selectedSemester}\n                    onSemesterChange={handleSemesterChange}\n                />\n                {selectedSemester && (\n                    <>\n                        <h2>Select a Course</h2>\n                        <CourseDropdown\n                            courses={courses}\n                            selectedCourse={selectedCourse}\n                            onCourseChange={handleCourseChange}\n                            selectedSemester={selectedSemester}\n                        />\n                        <button onClick={handleSearchResultVisibility} className=\"search-button\">Search</button>\n                    </>\n                )}\n            </div>\n            {showSearchResults && (\n                <>\n                    <div className=\"search-results\">\n                        <SearchResults\n                            selectedSemester={selectedSemester}\n                            selectedCourse={selectedCourse}\n                            API_url={api_url}\n                        />\n                    </div>\n                    <div className=\"calendar-button\">\n                        <Link to=\"/calendar\">\n                            <button>Go to Calendar</button>\n                        </Link>\n                    </div>\n                </>\n            )}\n            <div className=\"tips-container\">\n                <hr className=\"tips-divider\" />\n                <div className=\"tips-content\">\n                    <h3>Tips</h3>\n                    <p>- This is where you can search for courses and add them to your schedule</p>\n                    <p>- Once addded, go to Calendar and add them to your personal calendar</p>\n                    <p>- Search through all courses in a semester or choose a course in a semester to see all available exam scheduler for the course</p>\n                </div>\n            </div>\n        </>\n    );\n};\n","import React from 'react'\nimport './Welcome.css'\n\nexport default function Welcome() {\n    return (\n        <>\n            <div className=\"fadeInUp-animation fadeInTitle\">Welcome To Mav Exam Scheduler!</div>\n            <div className=\"info-container\">\n                <div className=\"info-box fadeInUp-animation\">\n                    <h2>About This Website</h2>\n                    <p>Looking at big PDF master plans like <a href=\"https://cdn.web.uta.edu/-/media/project/website/administration/registrar/documents/exam-schedules/spring2024-master.ashx\" target=\"_blank\">this</a> to find your exam schedule is <h2 className='emoji'>🤢</h2> </p>\n                    <p>Mav Exam Scheduler is designed to streamline your exam scheduling process. The aim is to provide an efficient and user-friendly platform to manage your academic calendar.</p>\n                    <p>Simply go to Search, choose a semester/course (or both!) and easily add your examss to your personal calendar with schedule and venue!</p>\n                </div>\n                <div className=\"info-box fadeInUp-animation\">\n                    <h2>Disclaimer</h2>\n                    <p>While I, the author and builder, have made every effort to ensure the accuracy and reliability of the information provided, I cannot guarantee its completeness or correctness. Users are strongly advised to double-check with their instructor or refer to the master plan to ensure they have the most current and accurate information. I am not responsible for any errors or omissions, or for any outcomes related to the use of this information. </p>\n                    <p>This project is not officially associated with The University of Texas at Arlington (UTA) and has been created through personal effort. All UTA symbols, logos, and trademarks are the property of The University of Texas at Arlington and are used here for informational purposes only.</p>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\nimport UTAImage from '../assets/UTA_Initials_white-orange-star-rgb.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faSearch, faCalendar, faEnvelope } from '@fortawesome/free-solid-svg-icons'\n\nconst NavBar = () => {\n    return (\n        <nav className='navbar'>\n            <div className=\"navbar-left\">\n                <Link to=\"/\">\n                    <img src={UTAImage} alt=\"UTA Logo\" className=\"uta-logo\" />\n                </Link>\n            </div>\n            <ul className=\"navbar-links\">\n                <li className=\"nav-link\">\n                    <Link to=\"/\">\n                        <FontAwesomeIcon icon={faHome} className=\"icon-spacing\" />\n                        Home\n                    </Link>\n                </li>\n                <li className=\"nav-link\">\n                    <Link to=\"/search\">\n                        <FontAwesomeIcon icon={faSearch} className=\"icon-spacing\" />\n                        Search\n                    </Link>\n                </li>\n                <li className=\"nav-link\">\n                    <Link to=\"/calendar\">\n                        <FontAwesomeIcon icon={faCalendar} className=\"icon-spacing\" />\n                        Calendar\n                    </Link>\n                </li>\n                <li className=\"nav-link\">\n                    <Link to=\"/contact\">\n                        <FontAwesomeIcon icon={faEnvelope} className=\"icon-spacing\" />\n                        Contact\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default NavBar; ","import './App.css';\nimport React from 'react';\nimport Calendar from './Calendar/Calendar';\nimport Contact from './Contact/Contact';\nimport Search from './Search/Search';\nimport Welcome from './Welcome/Welcome';\nimport NavBar from './Navbar/Navbar';\nimport { Routes } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n\n      <Routes>\n        <Route path=\"/\" element={<Welcome />} />\n        <Route path=\"/MavExamScheduler\" element={<Welcome />} />\n        <Route path=\"/calendar\" element={<Calendar />} />\n        <Route path=\"/contact\" element={<Contact />} />\n        <Route path=\"/search\" element={<Search />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    {/* <BrowserRouter> */}\n    <HashRouter>\n      <App />\n    </HashRouter>\n    {/* </BrowserRouter> */}\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}